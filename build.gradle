buildscript {
    repositories {
        jcenter()
        maven {
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "1.0"
group = "com.cleanroommc.orangecore"
archivesBaseName = "orangecore"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    def args = []
        args << '-Dmixin.hotSwap=true'
        args << '-Dmixin.checks.interfaces=true'
        args << '-Dmixin.debug.export=true'
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)

}

dependencies {

    // Remove below comments if you want to an API to download external assets from
    // deobfCompile ("com.github.CleanroomMC:AssetMover:0.2")
    compile(files("etc/CraftTweaker2-1.12-4.1.20.670.jar"))
    compile(files("etc/jei_1.12.2-4.16.1.301.jar"))
    compile(files("libs/airlock-1.0.jar"))

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'com.cleanroommc.orangecore.OrangeCore'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
        attributes 'ForceLoadAsMod': true
        def attribute_map = [:]
        attribute_map['TweakClass'] = 'org.spongepowered.asm.launch.MixinTweaker'
        attributes(attribute_map)
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.' + archivesBaseName + '.refmap.json'
}
